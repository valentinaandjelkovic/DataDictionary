package DataDictionaryDsl.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractDomen = createDescriptorForAbstractDomen();
  /*package*/ final ConceptDescriptor myConceptAggregation = createDescriptorForAggregation();
  /*package*/ final ConceptDescriptor myConceptBoolean = createDescriptorForBoolean();
  /*package*/ final ConceptDescriptor myConceptConstraint = createDescriptorForConstraint();
  /*package*/ final ConceptDescriptor myConceptDataDictionary = createDescriptorForDataDictionary();
  /*package*/ final ConceptDescriptor myConceptDate = createDescriptorForDate();
  /*package*/ final ConceptDescriptor myConceptDouble = createDescriptorForDouble();
  /*package*/ final ConceptDescriptor myConceptExclusive = createDescriptorForExclusive();
  /*package*/ final ConceptDescriptor myConceptField = createDescriptorForField();
  /*package*/ final ConceptDescriptor myConceptFieldDefinition = createDescriptorForFieldDefinition();
  /*package*/ final ConceptDescriptor myConceptIAbstractElement = createDescriptorForIAbstractElement();
  /*package*/ final ConceptDescriptor myConceptIAbstractStructure = createDescriptorForIAbstractStructure();
  /*package*/ final ConceptDescriptor myConceptISpecialization = createDescriptorForISpecialization();
  /*package*/ final ConceptDescriptor myConceptInteger = createDescriptorForInteger();
  /*package*/ final ConceptDescriptor myConceptNonExclusive = createDescriptorForNonExclusive();
  /*package*/ final ConceptDescriptor myConceptPredefinedDomen = createDescriptorForPredefinedDomen();
  /*package*/ final ConceptDescriptor myConceptSemanticDomen = createDescriptorForSemanticDomen();
  /*package*/ final ConceptDescriptor myConceptSemanticDomenDefinition = createDescriptorForSemanticDomenDefinition();
  /*package*/ final ConceptDescriptor myConceptSet = createDescriptorForSet();
  /*package*/ final ConceptDescriptor myConceptStructureDefinition = createDescriptorForStructureDefinition();
  /*package*/ final ConceptDescriptor myConceptText = createDescriptorForText();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractDomen, myConceptAggregation, myConceptBoolean, myConceptConstraint, myConceptDataDictionary, myConceptDate, myConceptDouble, myConceptExclusive, myConceptField, myConceptFieldDefinition, myConceptIAbstractElement, myConceptIAbstractStructure, myConceptISpecialization, myConceptInteger, myConceptNonExclusive, myConceptPredefinedDomen, myConceptSemanticDomen, myConceptSemanticDomenDefinition, myConceptSet, myConceptStructureDefinition, myConceptText);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AbstractDomen:
        return myConceptAbstractDomen;
      case LanguageConceptSwitch.Aggregation:
        return myConceptAggregation;
      case LanguageConceptSwitch.Boolean:
        return myConceptBoolean;
      case LanguageConceptSwitch.Constraint:
        return myConceptConstraint;
      case LanguageConceptSwitch.DataDictionary:
        return myConceptDataDictionary;
      case LanguageConceptSwitch.Date:
        return myConceptDate;
      case LanguageConceptSwitch.Double:
        return myConceptDouble;
      case LanguageConceptSwitch.Exclusive:
        return myConceptExclusive;
      case LanguageConceptSwitch.Field:
        return myConceptField;
      case LanguageConceptSwitch.FieldDefinition:
        return myConceptFieldDefinition;
      case LanguageConceptSwitch.IAbstractElement:
        return myConceptIAbstractElement;
      case LanguageConceptSwitch.IAbstractStructure:
        return myConceptIAbstractStructure;
      case LanguageConceptSwitch.ISpecialization:
        return myConceptISpecialization;
      case LanguageConceptSwitch.Integer:
        return myConceptInteger;
      case LanguageConceptSwitch.NonExclusive:
        return myConceptNonExclusive;
      case LanguageConceptSwitch.PredefinedDomen:
        return myConceptPredefinedDomen;
      case LanguageConceptSwitch.SemanticDomen:
        return myConceptSemanticDomen;
      case LanguageConceptSwitch.SemanticDomenDefinition:
        return myConceptSemanticDomenDefinition;
      case LanguageConceptSwitch.Set:
        return myConceptSet;
      case LanguageConceptSwitch.StructureDefinition:
        return myConceptStructureDefinition;
      case LanguageConceptSwitch.Text:
        return myConceptText;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractDomen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "AbstractDomen", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386035L);
    b.class_(false, true, false);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/1587350356734009397");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAggregation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "Aggregation", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x73ede05be9c14454L);
    b.class_(false, false, false);
    b.parent(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873e5L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/8353579569210541140");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolean() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "Boolean", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386049L);
    b.class_(false, false, false);
    b.super_("DataDictionaryDsl.structure.PredefinedDomen", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386038L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/1587350356734009417");
    b.version(2);
    b.alias("boolean");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "Constraint", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x605f2c5169ea95c5L);
    b.class_(false, false, false);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/6944317878609548741");
    b.version(2);
    b.property("description", 0x605f2c5169ea95c6L).type(PrimitiveTypeId.STRING).origin("6944317878609548742").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataDictionary() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "DataDictionary", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x73ede05be9bfff49L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/8353579569210457929");
    b.version(2);
    b.aggregate("structures", 0x73ede05be9bfff4cL).target(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x73ede05be9bfff46L).optional(true).ordered(true).multiple(true).origin("8353579569210457932").done();
    b.aggregate("semanticDomenDefinitions", 0x3ca44af6d3198070L).target(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x3ca44af6d3197f9aL).optional(true).ordered(true).multiple(true).origin("4369699962420297840").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "Date", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x356f836ebb6d8790L);
    b.class_(false, false, false);
    b.super_("DataDictionaryDsl.structure.PredefinedDomen", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386038L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/3850440718039222160");
    b.version(2);
    b.alias("Date");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDouble() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "Double", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386048L);
    b.class_(false, false, false);
    b.super_("DataDictionaryDsl.structure.PredefinedDomen", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386038L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/1587350356734009416");
    b.version(2);
    b.alias("Double");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExclusive() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "Exclusive", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873f0L);
    b.class_(false, false, false);
    b.parent(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873efL);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/510907218761642992");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "Field", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x73ede05be9c14433L);
    b.class_(false, false, false);
    b.parent(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873e6L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/8353579569210541107");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFieldDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "FieldDefinition", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd4338602aL);
    b.class_(false, false, false);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/1587350356734009386");
    b.version(2);
    b.associate("field", 0x160766bd4338602bL).target(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x73ede05be9c14433L).optional(false).origin("1587350356734009387").done();
    b.aggregate("domen", 0x160766bd4338604bL).target(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386035L).optional(false).ordered(true).multiple(false).origin("1587350356734009419").done();
    b.aggregate("constraint", 0x605f2c5169ea95c8L).target(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x605f2c5169ea95c5L).optional(false).ordered(true).multiple(false).origin("6944317878609548744").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIAbstractElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "IAbstractElement", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873e6L);
    b.interface_();
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/510907218761642982");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIAbstractStructure() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "IAbstractStructure", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873e5L);
    b.interface_();
    b.parent(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873e6L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/510907218761642981");
    b.version(2);
    b.aggregate("elements", 0x7171b68977873e9L).target(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873e6L).optional(true).ordered(true).multiple(true).origin("510907218761642985").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISpecialization() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "ISpecialization", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873efL);
    b.interface_();
    b.parent(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873e5L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/510907218761642991");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInteger() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "Integer", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386039L);
    b.class_(false, false, false);
    b.super_("DataDictionaryDsl.structure.PredefinedDomen", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386038L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/1587350356734009401");
    b.version(2);
    b.alias("Integer");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonExclusive() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "NonExclusive", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x73ede05be9c1bfe4L);
    b.class_(false, false, false);
    b.parent(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873efL);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/8353579569210572772");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredefinedDomen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "PredefinedDomen", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386038L);
    b.class_(false, true, false);
    b.super_("DataDictionaryDsl.structure.AbstractDomen", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386035L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/1587350356734009400");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSemanticDomen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "SemanticDomen", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386032L);
    b.class_(false, false, false);
    b.super_("DataDictionaryDsl.structure.AbstractDomen", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386035L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/1587350356734009394");
    b.version(2);
    b.associate("refSemanticDefinition", 0x3ca44af6d3197fa2L).target(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x3ca44af6d3197f9aL).optional(false).origin("4369699962420297634").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSemanticDomenDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "SemanticDomenDefinition", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x3ca44af6d3197f9aL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/4369699962420297626");
    b.version(2);
    b.aggregate("domen", 0x3ca44af6d3197f9dL).target(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386038L).optional(false).ordered(true).multiple(false).origin("4369699962420297629").done();
    b.aggregate("constraint", 0x3ca44af6d3197f9fL).target(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x605f2c5169ea95c5L).optional(false).ordered(true).multiple(false).origin("4369699962420297631").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "Set", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x73ede05be9c14455L);
    b.class_(false, false, false);
    b.parent(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873e5L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/8353579569210541141");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStructureDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "StructureDefinition", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x73ede05be9bfff46L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/8353579569210457926");
    b.version(2);
    b.aggregate("structure", 0x73ede05be9c17ae9L).target(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x7171b68977873e5L).optional(false).ordered(true).multiple(false).origin("8353579569210555113").done();
    b.aggregate("fieldDefinitions", 0x160766bd43386054L).target(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd4338602aL).optional(true).ordered(true).multiple(true).origin("1587350356734009428").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForText() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDsl", "Text", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd4338604aL);
    b.class_(false, false, false);
    b.super_("DataDictionaryDsl.structure.PredefinedDomen", 0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x160766bd43386038L);
    b.origin("r:bb0e4ed0-51eb-4179-aa62-896788d45e4f(DataDictionaryDsl.structure)/1587350356734009418");
    b.version(2);
    b.alias("Text");
    return b.create();
  }
}
